CREATE OR REPLACE PROCEDURE cropsap_procedure()
LANGUAGE plpgsql
AS $$
BEGIN

DROP TABLE IF EXISTS public.cropsap_view;

CREATE TABLE public.cropsap_view AS SELECT * FROM public.ca_crops_condition;


    ALTER TABLE public.cropsap_view ADD COLUMN geom geometry(Point, 4326);
	UPDATE public.cropsap_view SET geom = ST_SetSRID(ST_MakePoint(longitude::double precision, latitude::double precision),4326);
	
	-- Deleted recent not needable columns
	ALTER TABLE public.cropsap_view DROP COLUMN longitude;
	ALTER TABLE public.cropsap_view DROP COLUMN latitude;
	ALTER TABLE public.cropsap_view DROP COLUMN photograph_1;
	ALTER TABLE public.cropsap_view DROP COLUMN created_at;
	ALTER TABLE public.cropsap_view DROP COLUMN photograph_2; 
	ALTER TABLE public.cropsap_view DROP COLUMN village_census_code; 
	ALTER TABLE public.cropsap_view DROP COLUMN id; 
	ALTER TABLE public.cropsap_view DROP COLUMN updated_at;
	
END;
$$;



CREATE OR REPLACE FUNCTION cropsap_trigger()
RETURNS TRIGGER AS
$$
BEGIN
  CALL cropsap_procedure();
  RETURN NEW;
END;
$$
LANGUAGE plpgsql;



CREATE TRIGGER trigger_cropsap
AFTER INSERT ON public.ca_crops_condition
FOR EACH ROW
EXECUTE FUNCTION cropsap_trigger();

